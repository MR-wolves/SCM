C51 COMPILER V9.57.0.0   KEYSCAN                                                           12/21/2020 16:17:37 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE KEYSCAN
OBJECT MODULE PLACED IN .\Objects\keyscan.obj
COMPILER INVOKED BY: E:\Keil\C51\BIN\C51.EXE keyscan.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\keys
                    -can.lst) OBJECT(.\Objects\keyscan.obj)

line level    source

   1          #include "keyscan.h"
   2          #include "lcd.h"
   3          
   4          u8 flag,UnlResFlag,EntBacFlag;
   5          u8 UnlockLcd[]=" 1.Enter 2.Back";
   6          u8 UserPassword[6];
   7          u8 AdminPassword[6];
   8          u8 PassFlag;
   9          void KeyDelay(u16 z)     //11.0592MHz  1ms
  10          {
  11   1              while(z--){
  12   2                      unsigned char i, j;
  13   2      
  14   2                      _nop_();
  15   2                      i = 2;
  16   2                      j = 199;
  17   2                      do
  18   2                      {
  19   3                              while (--j);
  20   3                      } while (--i);
  21   2              }
  22   1      } 
  23          //按键检测
  24          void KeyDown(){
  25   1              char a=0;
  26   1              GPIO_KEY=0x0f;
  27   1              if(GPIO_KEY!=0x0f){
  28   2                      KeyDelay(10);
  29   2                      if(GPIO_KEY!=0x0f){
  30   3                              GPIO_KEY=0x0f;
  31   3                              switch(GPIO_KEY){
  32   4                                      case 0x07 : KeyVal=0;flag=1;break;
  33   4                                      case 0x0b : KeyVal=1;flag=1;break;
  34   4                                      case 0x0d : KeyVal=2;flag=1;break;
  35   4                                      case 0x0e : KeyVal=3;flag=1;break;
  36   4                              }
  37   3                              GPIO_KEY=0xf0;
  38   3                              switch(GPIO_KEY){
  39   4                                      case 0x70 : KeyVal=KeyVal;break;
  40   4                                      case 0xb0 : KeyVal=KeyVal+4;break;
  41   4                                      case 0xd0 : KeyVal=KeyVal+8;break;
  42   4                                      case 0xe0 : KeyVal=KeyVal+12;break;
  43   4                              }
  44   3                      }
  45   2                      while((a<50) && (GPIO_KEY!=0xf0)){
  46   3                              KeyDelay(1);
  47   3                              a++;
  48   3                      }
  49   2              }
  50   1      }
  51          //按键处理
  52          void Keypross(){
  53   1              if(flag==1){
  54   2                      switch(KeyVal){
C51 COMPILER V9.57.0.0   KEYSCAN                                                           12/21/2020 16:17:37 PAGE 2   

  55   3                              case 0:Numpross(7);break;
  56   3                              case 1:Numpross(8);break;
  57   3                              case 2:Numpross(9);break;
  58   3                              case 3:Modpross();break;
  59   3                              case 4:Numpross(4);break;
  60   3                              case 5:Numpross(5);break;
  61   3                              case 6:Numpross(6);break;
  62   3                              case 7:Reaetpross();break;
  63   3                              case 8:Numpross(1);break;
  64   3                              case 9:Numpross(2);break;
  65   3                              case 10:Numpross(3);break;
  66   3                              case 11:Backpross();break;
  67   3                              case 12:Lockpross();break;
  68   3                              case 13:Numpross(0);break;
  69   3                              case 14:Unlockpross();;break;
  70   3                              case 15:Enterpross();break;
  71   3                      }
  72   2              }
  73   1      }
  74          //按键数字处理
  75          void Numpross(u8 dat){
  76   1              if(UnlResFlag==1){
  77   2                      UserPassword[PassFlag]=dat;
  78   2                      WriteData(0x30+PassFlag);
  79   2              }
  80   1              if(UnlResFlag==2){
  81   2              
  82   2              }
  83   1              PassFlag++;
  84   1              if(PassFlag==6){
  85   2                      PassFlag=0;
  86   2              }
  87   1      }
  88          //修改功能处理
  89          void Modpross(){
  90   1              
  91   1      }
  92          //重置功能处理
  93          void Reaetpross(){
  94   1              UnlResFlag=2;
  95   1      }
  96          
  97          //Back功能处理
  98          void Backpross(){
  99   1              EntBacFlag=2;
 100   1              
 101   1      }
 102          //上锁功能处理
 103          void Lockpross(){
 104   1              UnlResFlag=0;
 105   1      }
 106          //解锁功能处理
 107          void Unlockpross(){
 108   1              u8 i;
 109   1              UnlResFlag=1;
 110   1              WriteCom(0x01);
 111   1              WriteCom(0x80+0x40);
 112   1              for(i=0;i<15;i++)
 113   1                      WriteData(UnlockLcd[i]);
 114   1              WriteCom(0x80);
 115   1              WriteCom(0x0f);
 116   1              while(!EntBacFlag){
C51 COMPILER V9.57.0.0   KEYSCAN                                                           12/21/2020 16:17:37 PAGE 3   

 117   2                      KeyDown();
 118   2                      Keypross();
 119   2              }
 120   1      }
 121          //Enter功能处理
 122          void Enterpross(){
 123   1              EntBacFlag=1;
 124   1              if(UnlResFlag==1){              //验证密码
 125   2                      
 126   2              }
 127   1              if(UnlResFlag==2){              //确认密码
 128   2              
 129   2              }
 130   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    390    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     33       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
